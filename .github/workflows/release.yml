name: Release Packages

on:
  release:
    types: [ published ]

jobs:
  build-ubuntu-legacy:
    strategy:
      matrix:
        version: [ '14.04', '16.04' ]
        docker_arch: [amd64, arm32v7, arm64v8]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: 'docker://${{ matrix.docker_arch }}/ubuntu:${{ matrix.version }}'
    steps:
      - name: Set up container
        run: |
          apt-get update
          apt-get install -y docker.io
      - name: "Get Tag Name"
        id: ref
        shell: bash
        run: |
          ref="${{ github.ref }}";
          ref="${ref//refs\/heads\//}";
          ref="${ref//refs\/tags\//}";
          ref="${ref//master/dev}";
          echo "$ref";
          echo "::set-output name=name::$ref"
      - uses: actions/checkout@v3
      # manually install and use rustup, since dtolnay/rust-toolchain is not supported on older versions of Ubuntu
      - name: "System Setup"
        run: |
          apt-get update;
          apt-get --assume-yes -f install curl build-essential pkg-config;
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs  | sh -s -- --default-toolchain stable -y;
          $HOME/.cargo/bin/cargo install --force cargo-deb
        env:
          DEBIAN_FRONTEND: noninteractive
          TZ: "America/St_Johns"
      - name: "Build Deb"
        run: $HOME/.cargo/bin/cargo +stable deb --output "target/debian/git-interactive-rebase-tool-${{ steps.ref.outputs.name }}-ubuntu-${{ matrix.version }}_$(dpkg --print-architecture).deb"
      - name: "Upload Release"
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/debian/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-ubuntu:
    strategy:
      matrix:
        version: [ '18.04', '20.04', '22.04', '22.10', '23.04' ]
        docker_arch: [amd64, arm32v7, arm64v8]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: 'docker://${{ matrix.docker_arch }}/ubuntu:${{ matrix.version }}'
    steps:
      - name: Set up container
        run: |
          apt-get update
          apt-get install -y docker.io
      - name: "Get Tag Name"
        id: ref
        shell: bash
        run: |
          ref="${{ github.ref }}";
          ref="${ref//refs\/heads\//}";
          ref="${ref//refs\/tags\//}";
          ref="${ref//master/dev}";
          echo "$ref";
          echo "::set-output name=name::$ref"
      - uses: actions/checkout@v3
      - name: "System Setup"
        run: |
          apt-get update;
          apt-get --assume-yes -f install curl build-essential pkg-config;
        env:
          DEBIAN_FRONTEND: noninteractive
          TZ: "America/St_Johns"
      - uses: dtolnay/rust-toolchain@stable
      - uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-deb
      - name: "Build Deb"
        run: $HOME/.cargo/bin/cargo +stable deb --output "target/debian/git-interactive-rebase-tool-${{ steps.ref.outputs.name }}-ubuntu-${{ matrix.version }}_$(dpkg --print-architecture).deb"
      - name: "Upload Release"
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/debian/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-debian:
    strategy:
      matrix:
        version: [ '10', '11', '12', 'sid' ]
        docker_arch: [amd64, arm32v7, arm64v8]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: 'docker://${{ matrix.docker_arch }}/debian:${{ matrix.version }}-slim'
    steps:
      - name: Set up container
        run: |
          apt-get update
          apt-get install -y docker.io
      - name: "Get Tag Name"
        id: ref
        shell: bash
        run: |
          ref="${{ github.ref }}";
          ref="${ref//refs\/heads\//}";
          ref="${ref//refs\/tags\//}";
          ref="${ref//master/dev}";
          echo "$ref";
          echo "::set-output name=name::$ref"
      - uses: actions/checkout@v3
      - name: "System Setup"
        run: |
          apt-get update;
          apt-get --assume-yes -f install curl build-essential pkg-config;
        env:
          DEBIAN_FRONTEND: noninteractive
          TZ: "America/St_Johns"
      - uses: dtolnay/rust-toolchain@stable
      - uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-deb
      - name: "Build Deb"
        run: $HOME/.cargo/bin/cargo +stable deb --output "target/debian/git-interactive-rebase-tool-${{ steps.ref.outputs.name }}-debian-${{ matrix.version }}_$(dpkg --print-architecture).deb"
      - name: "Upload Release"
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/debian/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-macos:
    runs-on: macos-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: "Build"
        run: "cargo +stable build --release"
      - name: "Rename"
        run: "cp target/release/interactive-rebase-tool target/release/macos-interactive-rebase-tool"
      - name: "Upload Release"
        uses: softprops/action-gh-release@v1
        with:
          files: target/release/macos-interactive-rebase-tool
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: "Build"
        run: "cargo rustc --target x86_64-pc-windows-msvc --release --bin interactive-rebase-tool"
      - name: "Upload Release"
        uses: softprops/action-gh-release@v1
        with:
          files: target/x86_64-pc-windows-msvc/release/interactive-rebase-tool.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
